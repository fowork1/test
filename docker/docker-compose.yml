version: '3'

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: "no"
    ports:
      - "8080:80"
    volumes:
      - ..:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/log:/var/log/nginx
    depends_on:
      - php
      - postgres

  postgres:
    image: postgres
    container_name: postgres
    restart: "no"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 
      POSTGRES_DB: test
      PGDATA: /var/lib/postgresql/data
      POSTGRES_HOST_AUTH_METHOD: trust
    #user: "1000:1000"
    ports:
      - "5432:5432"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/my-postgres.conf:/etc/postgresql/postgresql.conf
      - ./postgres/dumps:/tmp/dumps

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    restart: "no"
    volumes:
      - ..:/var/www/html
      - ./php/php.ini:/usr/local/etc/php/php.ini
      - ./php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./php/imagick-policy.xml:/etc/ImageMagick-6/policy.xml
    ports:
      - "9000:9000"
    expose:
      - "9001"

  db:
    image: adminer
    container_name: adminer
    restart: "no"
    ports:
      - 3000:8080
    depends_on:
      - postgres
  redis:
    image: redis
    container_name: redis
    restart: "no"
    ports:
      - 6380:6380
    expose:
      - "6380"

networks: 
  default:
    external: 
      name: test